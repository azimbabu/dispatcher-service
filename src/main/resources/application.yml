server:
  port: 9003

spring:
  application:
    name: dispatcher-service
  config:
    import: ""
  #    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-read-timeout: 5000
      request-connect-timeout: 5000
      retry:
        max-attempts: 6
        initial-interval: 1000
        max-interval: 2000
        multiplier: 1.1
      fail-fast: false
      enabled: false # disable Spring cloud config
    function:
      definition: pack|label
    stream:
      bindings:
        packlabel-in-0:
          destination: order-accepted
          group: ${spring.application.name}
        packlabel-out-0:
          destination: order-dispatched

  rabbitmq:
    host: localhost
    port: 5672
    username: user
    password: password
    connection-timeout: 5s

management:
  endpoints:
    web:
      exposure:
        include: configprops, env, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-components: always
      show-details: always
      probes:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
info:
  system: Polar Bookshop
